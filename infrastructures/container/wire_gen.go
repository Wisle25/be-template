// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"database/sql"
	"github.com/wisle25/be-template/applications/cache"
	"github.com/wisle25/be-template/applications/file_statics"
	"github.com/wisle25/be-template/applications/generator"
	"github.com/wisle25/be-template/applications/use_case"
	"github.com/wisle25/be-template/commons"
	"github.com/wisle25/be-template/infrastructures/repository"
	"github.com/wisle25/be-template/infrastructures/security"
	"github.com/wisle25/be-template/infrastructures/services"
	"github.com/wisle25/be-template/infrastructures/validation"
)

// Injectors from container.go:

// Dependency Injection for User Use Case
func NewUserContainer(config *commons.Config, db *sql.DB, cache2 cache.Cache, idGenerator generator.IdGenerator, fileProcessing file_statics.FileProcessing, fileUpload file_statics.FileUpload, validator *services.Validation) *use_case.UserUseCase {
	userRepository := repository.NewUserRepositoryPG(db, idGenerator)
	passwordHash := security.NewArgon2()
	validateUser := validation.NewValidateUser(validator)
	token := security.NewJwtToken(idGenerator)
	userUseCase := use_case.NewUserUseCase(userRepository, fileProcessing, fileUpload, passwordHash, validateUser, config, token, cache2)
	return userUseCase
}
